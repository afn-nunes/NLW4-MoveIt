{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"F:/andre/NLW/NLW4/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"F:\\\\andre\\\\NLW\\\\NLW4\\\\moveit-next\\\\src\\\\context\\\\ChallengeContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrenceExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setchallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  var _useState5 = useState(false),\n      isLevelModalOpen = _useState5[0],\n      setIsLevelModalOpen = _useState5[1];\n\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio'), {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      };\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrenceExperience(finalExperience);\n    setActiveChallenge(null);\n    setchallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      experienceToNextLevel: experienceToNextLevel,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge,\n      closeLevelUpModal: closeLevelUpModal,\n      activeChallenge: activeChallenge\n    },\n    children: [children, isLevelModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"ZpR8lw/auRHavy0l5XBcFgD+3n8=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["F:/andre/NLW/NLW4/moveit-next/src/context/ChallengeContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrenceExperience","challengesCompleted","setchallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","isLevelModalOpen","setIsLevelModalOpen","Notification","requestPermission","set","String","levelUp","closeLevelUpModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,EAA4CC,SAA5C,QAA4D,OAA5D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AA4BA,OAAO,IAAMC,iBAAiB,gBAAGN,aAAa,CAAC,EAAD,CAAvC;AACP,OAAO,SAASO,kBAAT,OAGsB;AAAA;;AAAA;;AAAA,MAFzBC,QAEyB,QAFzBA,QAEyB;AAAA,MADtBC,IACsB;;AAAA,kBACFR,QAAQ,gBAACQ,IAAI,CAACC,KAAN,qDAAc,CAAd,CADN;AAAA,MACpBA,KADoB;AAAA,MACbC,QADa;;AAAA,mBAEwBV,QAAQ,0BAACQ,IAAI,CAACG,iBAAN,yEAA0B,CAA1B,CAFhC;AAAA,MAEpBA,iBAFoB;AAAA,MAEDC,qBAFC;;AAAA,mBAG2BZ,QAAQ,0BAACQ,IAAI,CAACK,mBAAN,yEAA4B,CAA5B,CAHnC;AAAA,MAGpBA,mBAHoB;AAAA,MAGCC,sBAHD;;AAAA,mBAKkBd,QAAQ,CAAC,IAAD,CAL1B;AAAA,MAKrBe,eALqB;AAAA,MAKJC,kBALI;;AAO3B,MAAMC,qBAAqB,GAAIC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA/B;;AAP2B,mBAQqBT,QAAQ,CAAC,KAAD,CAR7B;AAAA,MAQpBoB,gBARoB;AAAA,MAQFC,mBARE;;AAU3BpB,EAAAA,SAAS,CAAC,YAAO;AACfqB,IAAAA,YAAY,CAACC,iBAAb;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAtB,EAAAA,SAAS,CAAC,YAAO;AACfC,IAAAA,OAAO,CAACsB,GAAR,CAAY,OAAZ,EAAqBC,MAAM,CAAChB,KAAD,CAA3B;AACAP,IAAAA,OAAO,CAACsB,GAAR,CAAY,mBAAZ,EAAiCC,MAAM,CAACd,iBAAD,CAAvC;AACAT,IAAAA,OAAO,CAACsB,GAAR,CAAY,qBAAZ,EAAmCC,MAAM,CAACZ,mBAAD,CAAzC;AACD,GAJQ,EAIN,CAACJ,KAAD,EAAQE,iBAAR,EAA2BE,mBAA3B,CAJM,CAAT;;AAMA,WAASa,OAAT,GAAmB;AACjBhB,IAAAA,QAAQ,CAAED,KAAK,GAAG,CAAV,CAAR;AACAY,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;;AAED,WAASM,iBAAT,GAA4B;AAC1BN,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;;AACD,WAASO,iBAAT,GAA6B;AAC3B,QAAMC,oBAAoB,GAAGX,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACa,MAAL,KAAgB5B,UAAU,CAAC6B,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAG9B,UAAU,CAAC0B,oBAAD,CAA5B;AACAb,IAAAA,kBAAkB,CAACiB,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AACA,QAAIb,YAAY,CAACc,UAAb,KAA4B,SAAhC,EAA0C;AACxC,UAAId,YAAJ,CAAiB,cAAjB,GAAiC;AAC/Be,QAAAA,IAAI,oBAAaJ,SAAS,CAACK,MAAvB;AAD2B,OAAjC;AAGD;AACF;;AAED,WAASC,cAAT,GAAyB;AACvBvB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,WAASwB,iBAAT,GAA4B;AAC1B,QAAI,CAACzB,eAAL,EAAqB;AACnB;AACD;;AAHyB,QAKnBuB,MALmB,GAKTvB,eALS,CAKnBuB,MALmB;AAM1B,QAAIG,eAAe,GAAG9B,iBAAiB,GAAG2B,MAA1C;;AAEA,QAAGG,eAAe,IAAIxB,qBAAtB,EAA4C;AAC1CwB,MAAAA,eAAe,GAAGA,eAAe,GAAGxB,qBAApC;AACAS,MAAAA,OAAO;AACR;;AAEDd,IAAAA,qBAAqB,CAAC6B,eAAD,CAArB;AACAzB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAC/BJ,MAAAA,KAAK,EAALA,KAD+B;AAE/BE,MAAAA,iBAAiB,EAAjBA,iBAF+B;AAG/BE,MAAAA,mBAAmB,EAAnBA,mBAH+B;AAI/BI,MAAAA,qBAAqB,EAArBA,qBAJ+B;AAK/BS,MAAAA,OAAO,EAAPA,OAL+B;AAM/BE,MAAAA,iBAAiB,EAAjBA,iBAN+B;AAO/BW,MAAAA,cAAc,EAAdA,cAP+B;AAQ/BC,MAAAA,iBAAiB,EAAjBA,iBAR+B;AAS/Bb,MAAAA,iBAAiB,EAAjBA,iBAT+B;AAU/BZ,MAAAA,eAAe,EAAfA;AAV+B,KAAnC;AAAA,eAYGR,QAZH,EAaGa,gBAAgB,iBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAbtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAnFed,kB;;KAAAA,kB","sourcesContent":["import {createContext, useState, ReactNode, useEffect} from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\ninterface ChallengesProviderProps{\r\n  children: ReactNode;\r\n  level: number, \r\n  currentExperience: number, \r\n  challengesCompleted: number\r\n}\r\n\r\ninterface Challenge{\r\n  type: 'body'| 'eye', \r\n  description: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChallengeContextData{\r\n  level: number; \r\n  currentExperience: number; \r\n  challengesCompleted: number; \r\n  activeChallenge: Challenge; \r\n  experienceToNextLevel: number;\r\n  levelUp: ()=> void;\r\n  startNewChallenge: ()=> void;\r\n  resetChallenge: ()=> void;\r\n  completeChallenge: ()=> void;\r\n  closeLevelUpModal: ()=> void;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengeContextData);\r\nexport function ChallengesProvider({\r\n    children,\r\n    ...rest\r\n  }: ChallengesProviderProps){\r\n  const [level, setLevel]= useState(rest.level?? 1);\r\n  const [currentExperience, setCurrenceExperience] = useState(rest.currentExperience?? 0);\r\n  const [challengesCompleted, setchallengesCompleted] = useState(rest.challengesCompleted?? 0);\r\n\r\n  const[activeChallenge, setActiveChallenge] = useState(null);\r\n\r\n  const experienceToNextLevel =  Math.pow((level + 1) * 4, 2);\r\n  const [isLevelModalOpen, setIsLevelModalOpen] = useState(false);\r\n\r\n  useEffect(()  => {\r\n    Notification.requestPermission();\r\n  }, [] );\r\n\r\n  useEffect(()  => {\r\n    Cookies.set('level', String(level));\r\n    Cookies.set('currentExperience', String(currentExperience));\r\n    Cookies.set('challengesCompleted', String(challengesCompleted));\r\n  }, [level, currentExperience, challengesCompleted] );\r\n\r\n  function levelUp() {\r\n    setLevel (level + 1);\r\n    setIsLevelModalOpen(true);\r\n  }\r\n\r\n  function closeLevelUpModal(){\r\n    setIsLevelModalOpen(false);\r\n  }\r\n  function startNewChallenge() {\r\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n    const challenge = challenges[randomChallengeIndex];\r\n    setActiveChallenge(challenge);\r\n    \r\n    new Audio('/notification.mp3').play();\r\n    if (Notification.permission === 'granted'){\r\n      new Notification('Novo desafio'),{\r\n        body: `Valendo ${challenge.amount}xp!`\r\n      };\r\n    }\r\n  }\r\n\r\n  function resetChallenge(){\r\n    setActiveChallenge(null);\r\n  }\r\n\r\n  function completeChallenge(){\r\n    if (!activeChallenge){\r\n      return;\r\n    }\r\n    \r\n    const {amount} = activeChallenge;\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if(finalExperience >= experienceToNextLevel){\r\n      finalExperience = finalExperience - experienceToNextLevel;\r\n      levelUp();\r\n    }\r\n\r\n    setCurrenceExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setchallengesCompleted(challengesCompleted + 1);\r\n  }\r\n\r\n  return(\r\n    <ChallengesContext.Provider value={{\r\n        level, \r\n        currentExperience, \r\n        challengesCompleted, \r\n        experienceToNextLevel,\r\n        levelUp,\r\n        startNewChallenge,\r\n        resetChallenge,\r\n        completeChallenge,\r\n        closeLevelUpModal,\r\n        activeChallenge\r\n    }}>\r\n      {children}\r\n      {isLevelModalOpen &&<LevelUpModal/>}\r\n    </ChallengesContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}