{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\andre\\\\NLW\\\\NLW4\\\\moveit-next\\\\src\\\\context\\\\CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ChallengeContext\";\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimeout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.05 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setHasFinished(false);\n    setTime(0.05 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountdownProvider, \"d2DHM+dnGwVc+mlrDZr2CUnen/Y=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["F:/andre/NLW/NLW4/moveit-next/src/context/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","CountdownContext","countdownTimeout","CountdownProvider","children","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AAeA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AAEP,IAAIM,gBAAJ;AACA,OAAO,SAASC,iBAAT,OAA8D;AAAA;;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;;AAAA,oBACrCP,UAAU,CAACG,iBAAD,CAD2B;AAAA,MAC3DK,iBAD2D,eAC3DA,iBAD2D;;AAAA,kBAE3CN,QAAQ,CAAC,OAAO,EAAR,CAFmC;AAAA,MAE5DO,IAF4D;AAAA,MAEtDC,OAFsD;;AAAA,mBAGlCR,QAAQ,CAAC,KAAD,CAH0B;AAAA,MAG5DS,QAH4D;AAAA,MAGjDC,WAHiD;;AAAA,mBAI7BV,QAAQ,CAAC,KAAD,CAJqB;AAAA,MAI5DW,WAJ4D;AAAA,MAI/CC,cAJ+C;;AAKnE,MAAOC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAjB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAAyB;AACvBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,WAASQ,cAAT,GAAyB;AACvBC,IAAAA,YAAY,CAAChB,gBAAD,CAAZ;AACAO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,IAAAA,OAAO,CAAC,OAAO,EAAR,CAAP;AACD;;AAEDT,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAGU,QAAQ,IAAIF,IAAI,GAAE,CAArB,EAAuB;AACrBJ,MAAAA,gBAAgB,GAAGiB,UAAU,CAAC,YAAM;AAClCZ,QAAAA,OAAO,CAACD,IAAI,GAAE,CAAP,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AACjCK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AAClB;AACF,GAVQ,EAUP,CAACG,QAAD,EAAWF,IAAX,CAVO,CAAT;AAYA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAC9BM,MAAAA,OAAO,EAAPA,OAD8B;AAE9BG,MAAAA,OAAO,EAAPA,OAF8B;AAG9BL,MAAAA,WAAW,EAAXA,WAH8B;AAI9BF,MAAAA,QAAQ,EAARA,QAJ8B;AAK9BQ,MAAAA,cAAc,EAAdA,cAL8B;AAM9BC,MAAAA,cAAc,EAAdA;AAN8B,KAAlC;AAAA,cAQGb;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA3CeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { ChallengesContext } from \"./ChallengeContext\";\r\n\r\ninterface CountdownContextdata{\r\n  minutes: number;\r\n  seconds: number; \r\n  hasFinished: boolean; \r\n  isActive: boolean; \r\n  startCountdown: () => void;\r\n  resetCountdown: () => void;\r\n}\r\n\r\ninterface CountdownProviderProps{\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CountdownContext = createContext({} as CountdownContextdata);\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\nexport function CountdownProvider({children}: CountdownProviderProps){\r\n  const { startNewChallenge } = useContext(ChallengesContext);\r\n  const [time, setTime] = useState(0.05 * 60);\r\n  const [isActive,  setIsActive] = useState(false);\r\n  const [hasFinished, setHasFinished] = useState(false);\r\n  const  minutes = Math.floor(time / 60);\r\n  const seconds = time % 60;\r\n\r\n  function startCountdown(){\r\n    setIsActive(true);\r\n  }\r\n\r\n  function resetCountdown(){\r\n    clearTimeout(countdownTimeout);\r\n    setIsActive(false);\r\n    setHasFinished(false);\r\n    setTime(0.05 * 60);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(isActive && time >0){\r\n      countdownTimeout = setTimeout(() => {\r\n        setTime(time -1);\r\n      }, 1000)\r\n    } else if (isActive && time === 0 ){\r\n      setHasFinished(true);\r\n      setIsActive(false);\r\n      startNewChallenge();\r\n    }\r\n  },[isActive, time])\r\n  \r\n  return(   \r\n    <CountdownContext.Provider value={{\r\n        minutes, \r\n        seconds, \r\n        hasFinished, \r\n        isActive, \r\n        startCountdown, \r\n        resetCountdown,\r\n    }}>\r\n      {children}\r\n     </CountdownContext.Provider> \r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}